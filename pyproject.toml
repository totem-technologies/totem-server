[project]
name = "totem-server"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "argon2-cffi<26",
    "cssselect<2",
    "fonttools>=4.55.3",
    "google-api-python-client<3",
    "google-auth-oauthlib<2",
    "gunicorn<24",
    "lxml<7",
    "markdown<3.9.0",
    "mrml<0.3.0",
    "Pillow<12",
    "posthog<7.0.0",
    "psycopg[binary]<4",
    "python-dateutil<3",
    "pytz",
    "qrcode<9",
    "requests<3",
    "sentry-sdk[django]<3",
    "whitenoise<7",
    # Django dependencies
    "django-allauth<66",
    "django-anymail<14",
    "django-auditlog<4",
    "django-cors-headers<5",
    "django-environ==0.12.0",
    "django-imagekit<6.0.0",
    "django-impersonate<2",
    "django-ninja<2",
    "django-storages[s3]<2",
    "django-taggit<7",
    "django-timezone-field<8",
    "django<5.3",
    "pyjwt>=2.10.1",
    "firebase-admin>=6.8.0",
    "tenacity>=9.1.2",
    "livekit<2",
    "livekit-api<2"
]

[dependency-groups]
dev = [
    "ipdb==0.13.13",
    "watchfiles<2",
    "uv",

    # Testing
    "mypy<2",
    "django-stubs[compatible-mypy]<6",
    "pytest<9",
    "pytest-sugar<2",
    "pytest-socket<1",

    # Code quality
    "coverage<8.0.0",
    "pip-tools<8",
    "pre-commit<5",
    "pylint-django<3.0.0",
    "ruff",

    # Django
    "django-debug-toolbar<7",
    "django-extensions<5",
    "factory-boy<4",
    "pytest-cov<7",
    "pytest-django<5",
    "pytest-xdist<4",
]


# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db"
python_files = ["tests.py", "test_*.py"]
filterwarnings = ["ignore::pydantic.warnings.PydanticDeprecatedSince20"]

# ==== Coverage ====
[tool.coverage.run]
include = ["totem/**"]
omit = ["*/migrations/*", "*/tests/*"]
disable_warnings = ["include-ignored"]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py311']


# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = ["totem", "config"]
skip = ["venv/"]
skip_glob = ["**/migrations/*.py"]


# ==== mypy ====
[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "config.settings.test"


# ==== PyLint ====
[tool.pylint.MASTER]
load-plugins = ["pylint_django"]
django-settings-module = "config.settings.local"

[tool.pylint.FORMAT]
max-line-length = 119

[tool.pylint."MESSAGES CONTROL"]
disable = ["missing-docstring", "invalid-name"]

[tool.pylint.DESIGN]
max-parents = 13

[tool.pylint.TYPECHECK]
generated-members = [
    "REQUEST",
    "acl_users",
    "aq_parent",
    "[a-zA-Z]+_set{1,2}",
    "save",
    "delete",
]

# ==== Ruff =====
[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
lint.ignore = ["E501"]
# Exclude a variety of commonly ignored directories.
exclude = ["migrations"]
line-length = 120

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
